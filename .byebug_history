c
Profile.find_by()c
profile.first
Profile.first
c
</div> c
  <div id="map-canvas" style="width:1200px;height:400px"/>
  <br />
  <label>Location :</label>
  <br />
  <label>Name : </label>&nbsp;<%= current_user.name %>
  </script>
    })
      set_map('<%= current_user.state %>', '<%= current_user.city %>');
    $(document).ready(function(){
    }
      return false;
      });
        }
          alert("Geocode was not successful for the following reason: " + status);
        }else{
          });
            position: result[0].geometry.location
            map: map,
          var marker = new google.maps.Marker({
          map.setCenter(result[0].geometry.location);
        if (status == google.maps.GeocoderStatus.OK){
      function(result, status){
      },
        'address':address
      geocoder.geocode({
      var geocoder = new google.maps.Geocoder();
      }
        address = state + ',' + city;
      }else{
        address = city;
      if(state == ""){
      mapOptions);
      var map = new google.maps.Map(document.getElementById("map-canvas"),
      };
        mapTypeId: google.maps.MapTypeId.ROADMAP
        zoom: 8,
        center: new google.maps.LatLng(25.687944,-100.309403),
      var mapOptions = {
    function set_map(state, city){
  <script type="text/javascript">
  </script>
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAVdlyqpDfn1sXmYcY9WJS4cfU0jnkIWao&sensor=false">
  <script type="text/javascript"
  </style>
    #map-canvas { height: 100% }
    body { height: 100%; margin: 0; padding: 0 }
    html { height: 100% }
     <style type="text/css">
<div>
@profile
c
@subscription = Subscription.new(params[:subscription])
params[:subscription]
params
@subscription = Subscription.new(params[:subscription])
params[:subscription]
 Subscription.new
params
c
curl https://api.stripe.com/v1/customers \
@user=User.create(email:params[:customer][:email],password:"123456")
@customer=Customer.create(customer_params)
customer_params
Stripe::Customer.create
c
User.create(email:params[:customer][:email])
=User.create(email:params[:customer][:email])
email:params[:customer][:email]
 @user=User.create(email:params[:customer][:email],password:"123456")
@customer=Customer.create(customer_params)
params
c
params
charge = Stripe::Charge.create({amount: @amount,description: 'Rails Stripe customer',source: params['stripe_token']})
charge = Stripe::Charge.create({amount: @amount,description: 'Rails Stripe customer',source: booking_params['stripe_token']})
charge = Stripe::Charge.create({currency: "gbp",source: "token"})
charge = Stripe::Charge.create({currency: "gbp",source: 'token'})
charge = Stripe::Charge.create()
params
Stripe::Customer.create
@user=User.create(email:params[:customer][:email],password:"123456")
 @customer=Customer.create(customer_params)
params
c
params
c
params
c
params
exit
params
c
 Stripe::Customer.create
 Stripe::Customer
@amount = params[:price]
@user.save
 @user=User.new(email:params[:customer][:email],password:"123456")
@customer=Customer.create(customer_params)
customer_params
c
  params
c
ustomer = Stripe::Customer.create
 @amount = params[:price]
c
charge = Stripe::Customer.create({:amount => 400,:currency => "usd",:customer => Customer.ids,:description => "Charge for test@example.com"})
params[:stripeToken]
:source => params[:stripeToken]
charge = Stripe::Charge.create({:amount => 400,:currency => "usd",:source => params[:stripeToken],:description => "Charge for test@example.com"})
charge = Stripe::Charge.create({:amount => 400,:currency => "usd",:customer => Customer.ids[11],:description => "Charge for test@example.com"})
charge = Stripe::Charge.create({:amount => 400,:currency => "usd",:customer => Customer.ids,:description => "Charge for test@example.com"})
charge = Stripe::Charge.create({:amount => 400,:currency => "usd",:customer => Customer.id,:description => "Charge for test@example.com"})
charge = Stripe::Charge.create({:amount => 400,:currency => "usd",:customer => customer.id,:description => "Charge for test@example.com"})
charge = Stripe::Charge.create
customer = Stripe::Customer.create(source: params[:stripeToken])
Stripe::Charge.create(customer: Customer.ids[11],amount: @amount,description: 'Rails Stripe customer',currency: 'usd')
Stripe::Charge.create(customer: Customer.ids[0],amount: @amount,description: 'Rails Stripe customer',currency: 'usd')
Stripe::Charge.create(customer: Customer.ids,amount: @amount,description: 'Rails Stripe customer',currency: 'usd')
Customer.ids
Customer.id
Customer
Stripe::Charge.create(customer: Customer.id)
Stripe::Charge.create(customer: customer.id)
      description: 'Rails Stripe customer',
      amount: @amount,
Stripe::Charge.create(customer: customer.id,)
Stripe::Charge.create
Stripe::Customer.create(email:params[:customer][:email],source:"https://checkout.stripe.com/checkout.js")
Stripe::Customer.create(email:params[:customer][:email])
Stripe::Customer.create(email:params[:customer][:email],source: params[:authenticity_token])
params[:authenticity_token]
params[:stripeToken]
source: params[:stripeToken]
Stripe::Customer.create(email: params[:customer][:email],)
Stripe::Customer.create(email: params[:stripeEmail],)
params[:customer][:email]
params[:email]
params
params[:stripeEmail]
Stripe::Customer.create()
      email: params[:stripeEmail],
customer = Stripe::Customer.create(
Stripe::Customer.create(email: params[:stripeEmail],source: params[:stripeToken])
      description: 'Rails Stripe customer',
      amount: @amount,
      customer: customer.id,
charge = Stripe::Charge.create(
Stripe::Customer.create(create_params)
Stripe::Customer.create
Stripe::Customer
Customer.create(customer_params)
customer_params
exit
Stripe::Customer.create
(email: params[:stripeEmail])
email: params([:stripeEmail])
email: params[:stripeEmail]
customer.id
Stripe::Customer.create
Stripe::Customer
params
c
@user.stripe_card_token.present? 
token = params[:stripeToken]
Stripe::Customer.create(email: params[:stripeEmail],source: params[:stripeToken])
@amount = params[:price]
@customer.save
@user=User.new(email:params[:customer][:email],password:"123456")
 @customer=Customer.create(customer_params)
customer_params
c
customer_params
c
stripeEmail
@amount = params[:price]
c
@customer=Customer.create(customer_params)
customer_params
c
customer.id
Stripe::Customer.new(email: params[:customer][:email])
Stripe::Customer.new(email: params[:stripeEmail])
Stripe::Customer.new
Stripe::Customer
c
errors?
e.message
@amount
customer.id
@amount = params[:price]
@user=User.new(email:params[:customer][:email],password:"123456")
@customer=Customer.create(customer_params)
c
customer.id
customer
@amount = params[:price]
@user=User.new(email:params[:customer][:email],password:"123456")
@customer=Customer.create(customer_params)
c
@customer=Customer.create(customer_params)
customer_params
@customer=Customer.create(customer_params)
params
c
customer = Stripe::Customer.create(email: params[:stripeEmail],source: params[:stripeToken])
email:params[:stripeEmail]
email: params[:stripeEmail]
@user
@user=User.new(email:params[:customer][:email])
@user=User.new(email:params[:customer][:email]
@customer.users
@customer.user
@customer
@customer=Customer.new(customer_params)
@costomer
@customer=Customer.new(customer_params)
customer_params
c
@customer=Customer.new(customer_params)
params
c
@user=User.new(email:params[:customer][:email],password:"123456")
@customer=Customer.new(customer_params)
customer_params
params
c
~c
c
@user.save
 @user=User.new(email:params[:customer][:email],password:"123456")
@customer.save
@customer=Customer.new(customer_params)
customer_params
params
c
customer_params
params
c
@customer=Customer.new(customer_params)
customer_params
@customer.save
params
c
@customer.save
 @user=User.new(email:params[:customer][:email],password:"123456")
@customer=Customer.new(customer_params)
customer_params
c
dc
W=User.new(email:params[:customer][:email],password:SecureRandom.hex(6))
